
1. 
Question : "რა არის !important-ი css-ში და შეგვიძლია თუ არა მისი გამოყენება tailwind-ში?" 
Answer : !important გამოიყენება რაიმე სტილის უფრო დიდი მნიშვნელობის მისანიჭებლად, ისევე როგორც id-ის ქვეშ დაწერილი სტილები ზემოდან ეწერება class-ის ქვეშ დაწერილ სტილებს, იგივენაირად შეგვიძლია !important დავუწეროთ და ამით ჩვენ ყველაზე დიდ მნიშვნელობას ვანიჭებთ მას. 
ჩვეულებრივი
--------
2. 
Question : "რა არის <iframe>?" 
Answer : <iframe> არის html tag-ი რომელიც ჩვენს გვერდზე ტვირთავს სხვა html კოდს, მაგალითად ამის გამოყენებით შეგვიძლია რუკა ჩავსვათ ჩვენ საიტზე.
--------
3.
Question : "მოიყვანეთ სემანტიკური ელემენტების მაგალითები" 
Answer : <header> <main> <footer> <section> <p> <h1...h5> ...
--------
4.
Question : "რა განსხვავებებია position: relative-ს, fixed-ს, absolute-სა და sticky-ის შორის?" 
Answer : position: relative-ის დროს ელემენტი ვარდება დოკუმენტიდან და პოზიციას იღებს თავისი საწყისი ადგილიდან.
posiotion: absolute-ის დროს ეს ელემენტი პოზიციას ირჩევს მის  position: relative არ უწერია. position: fixed-ის შემთხვევაში ეს ელმენტი სულ ერთ ადგილას დარჩება. possition: sticky ასევთქვათ ეწპება ჩვენ dom-ს მაგალითად scroll-ის დროს
--------
5.
Question : "რითი განსხვავდება rem და em-ი ერთმანეთისგან?" 
Answer : rem-ის შემთხევაში ელემენტის ზომა არის დამოკიდებული html-ის root-ზე, იმის მიუხედავად თუ მის მშობელს აქვს თუ არა სხვა ზომა გაწერილი, ხოლო em-ის შემთხვევაში მისი ზომა დამოკიდებული მისი მშობლის ზომაზე.
--------
6.
Question : "რა არის ვირტუალური DOM-ი?" 
Answer : VDOM-ი არის DOM-ის კოპირებული ვერსია, რომელიც იქმნება მაშინ, როცა ჩვენ საიტზე რამის დარენდერება გვინდა, შემდეგ ეს VDOM-ი დარდება DOM-ის ვერსიას და შემდგომ მხოლოდ ის რენდერდება რაც საჭიროა.
--------
7.
Question : "რა არის useEffect-ის გამოყენების მიზანი?"
Answer : useEffect-ი არის React Hook-ი რომელიც გვეხმარება დამატებითი ფუნქციების მინიჭებაში, როცა კომპონენტი იქმნება, ცვლილებას განიცდის და კვდება, ასევე ეს ჰუკი გვეხმარება fetch-ში და ზოგადად პერფორმანსის გაუმჯობესებაში
--------
8.
Question : "რა არის Zustand-ი?" 
Answer : Zustand არის ბიბლიოთეკა, რომელიც გვეხმარება state management-ში, იგივეა რაც useContext-ი, მაგრამ უკეთესი პერფორმანსით. ამის გამოყენება მაშინაა საჭირო როცა, მშობელი კომპონენტიდან რაიმე ინფორმაციის გადაცემა გვინდა მის შვილ კომპონენტთან, რის გამოც გვიწევს ისეთი კომპონენტების გავლა რომელშიც არ გვჭირდება ეს ინფორმაცია, ამიტომ ამ ბიბლიოთეკით ეს ინფორმაცია გაგვაქვს გლობალურად და არ გვიწევს props driling
--------
9.
Question : "რა არის და როგორ შვქმნათ დინამიური როუთი Next.js-ში" 
Answer : დინამიური როუთი არის ერთი გვერდი, რომლის ინფორმაციაც დამოკიდებულია მისამართის დაბოლოებაზე, ანუ მაგალთად amazon-ის საიტზე რომ შევდივათ და რაიმე პროდუქტის გვედზე გადავდივართ, თითოეული პროდუქტისთვის ცალკე html ფაილი არ იწერება, არამედ ერთი ფაილი შექმნილი რომელიც ივსება იმის მიხედვით მაგალითად, რომელი id არის. დინამიური როუთი შეგვიძლია შევქმნათ ფაილის შემდეგნაირად დასახელებით: [id]
--------
10.
Question : "რისთვის ამოიყენება (home) ფოლდერის დასახლება Next-ში. " 
Answer : ()-ით ჩვენ ახალ routes არ ვქმნით, მაგალითად რაიმე მისამართი localhost:111/home/register-ის გამივრად home-ის როუთი არ იქმნება, ამის გამოყენებით ჩვენ შეგვიძლია გარკვეული route-ები დავაჯგუფოთ, მაგალითად register, login და forget-password ერთად და სხვა
--------
